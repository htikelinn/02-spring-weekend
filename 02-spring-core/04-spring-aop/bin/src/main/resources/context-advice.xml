<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:component-scan
		base-package="com.jdc.dto" />
	
	<aop:config proxy-target-class="true">
		<aop:pointcut  expression="bean(myClient)" id="clientBean"/>
		<aop:aspect ref="aspectLogger">
			<!-- <aop:before method="beforeExecution" pointcut-ref="clientBean"/>
			<aop:after method="afterExecution" pointcut-ref="clientBean"/>
			<aop:after-returning method="afterReturn" pointcut-ref="clientBean"/>
			<aop:after-throwing method="afterThrowing" pointcut-ref="clientBean"/> -->
			<aop:around method="arroundAdvice" pointcut-ref="clientBean"/>
		</aop:aspect>
	</aop:config>
</beans>