<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    <context:component-scan base-package="com.jdc.dto"></context:component-scan>
    
    <aop:config proxy-target-class="true">
    	<!-- <aop:pointcut expression="execution(public int com.jdc.dto.MyClient.divided(..)) and args(x,y)" id="dividedBean"/> -->
    	<aop:pointcut expression="bean(myClient) " id="dividedBean"/>
    	<aop:aspect ref="aspectLogger">
    		<aop:before  method="beforeExecution" arg-names="x,y" pointcut="bean(myClient) and args(x,y)"/>
    		<aop:after-returning method="afterReturn"  arg-names="x,y" returning="value" pointcut="bean(myClient) "/>
    		<aop:after-throwing  method="afterThrowing"  throwing="tt"  pointcut="bean(myClient)"/>
    		<!-- <aop:around method="arroundAdvice" pointcut-ref="dividedBean"/> -->
    	</aop:aspect>
    	
    </aop:config>

</beans>